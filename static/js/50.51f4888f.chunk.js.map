{"version":3,"sources":["screens/Channel/DataTablesChannel.js","screens/Channel/AddChannel.js","screens/Channel/ChannelActions.js","screens/Channel/Channel.js"],"names":["DataTablesChannel","data","columns","label","field","sort","width","rows","posts","small","theadColor","responsiveXl","btn","striped","sortable","bordered","noBottomColumns","responsiveSm","toast","configure","AddChannel","props","addChannel","e","preventDefault","currentUser","JSON","parse","localStorage","getItem","createdBy","role","formID","document","querySelector","formData","FormData","name","get","department","XMLHttpRequest","onreadystatechange","this","readyState","status","alert","append","axios","post","APP_CONFIG","API_CREATE_CHANNEL","headers","ContentType","Authorization","token","then","res","setTimeout","window","location","reload","state","selectedFile","modal","backdrop","openFormModal","bind","setState","prevState","Modal","size","isOpen","toggle","className","Form","id","onSubmit","ModalHeader","ModalBody","style","color","FormGroup","row","Label","htmlFor","sm","md","offset","Col","Input","type","placeholder","required","ModalFooter","paddingRight","onClick","backgroundColor","borderColor","borderRadius","paddingLeft","paddingTop","paddingBottom","textTransform","Component","ChannelActions","buttonLabelView","useState","setModal","modal2","setModal2","modal3","setModal3","toggleEditChannel","toggleDelete","closeModal","fontFamily","border","fontSize","selectedChannelLabel","selectedChannelFunction","defaultValue","updatedBy","channelForm","updatedOn","Date","put","API_UPDATE_CHANNEL","selectedChannelId","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Channel","toggleViewChannel","changeBackdrop","_that","API_GET_CHANNEL","currentUserErrorCode","errCode","postChannelItems","channels","postList","length","map","createdOn","dateUpdated","function","toString","substring","action","constructor","ProductData","value","target","href","removeItem","height","float"],"mappings":"6RAmEeA,G,OA9DW,SAAC,GAAe,IAEhCC,EAAO,CACTC,QAAS,CACL,CACIC,MAAO,IACPC,MAAO,KACPC,KAAM,WACNC,MAAO,IAEX,CACIH,MAAO,OACPC,MAAO,QACPC,KAAM,MACNC,MAAO,IAEX,CACIH,MAAO,WACPC,MAAO,WACPC,KAAM,MACNC,MAAO,IAEX,CACIH,MAAO,aACPC,MAAO,YACPC,KAAM,MACNC,MAAO,IAQX,CACIH,MAAO,SACPC,MAAO,SACPC,KAAM,WACNC,MAAO,KAGPC,KAzCyB,EAAZC,OA4CzB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAQ,EACRC,WAAa,QACbC,cAAY,EACZC,KAAK,EACLC,SAAO,EACPZ,KAAMA,EACNa,UAAW,EACXC,UAAQ,EACRC,iBAAe,EACfC,cAAY,O,kIChD5BC,IAAMC,Y,IA6HSC,E,YAzHX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAkBVC,WAAa,SAACC,GACVA,EAAEC,iBAEF,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9CC,EAAS,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAaM,KAE3BC,EAASC,SAASC,cAAc,gBAC9BC,EAAW,IAAIC,SAASJ,GAE1BK,EAAOF,EAASG,IAAI,QACpBC,EAAaJ,EAASG,IAAI,eAEhB,IAAIE,gBAEVC,mBAAqB,WACD,IAApBC,KAAKC,WAAmC,MAAhBD,KAAKE,QAC7BC,MAAM,eAIM,IAAIT,UACZU,OAAO,cAAe,aAAeT,EAAO,oBAAsBE,EAAa,MAElF,eAGVQ,IAAMC,KAAKC,EAAWA,yBAAkCC,mBACrD,CACE,MAASb,EACT,SAAYE,EACZ,UAAaT,GAEjB,CACIqB,QAAS,CACLC,YAAa,mBACbC,cAAe5B,EAAY6B,SAEhCC,MAAK,SAAUC,GAEdtC,YAAM,gCACNuC,YAAW,WACPC,OAAOC,SAASC,WACjB,SA3DP,EAAKC,MAAQ,CACTC,aAAc,KACdC,OAAO,EACPC,UAAU,GAGd,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBARN,E,6EAcfxB,KAAKyB,UAAS,SAAAC,GAAS,MAAK,CACxBL,OAAQK,EAAUL,Y,+BAqDtB,OACI,6BAGI,kBAACM,EAAA,EAAD,CAAOC,KAAK,KAAKC,OAAQ7B,KAAKrB,MAAM0C,MAAOS,OAAQ9B,KAAKrB,MAAMmD,OAAQC,UAAW/B,KAAKrB,MAAMoD,UAAWT,SAAUtB,KAAKsB,UAGlH,kBAACU,EAAA,EAAD,CAAMC,GAAG,cAAcC,SAAUlC,KAAKpB,YAElC,kBAACuD,EAAA,EAAD,CAAaL,OAAQ9B,KAAKrB,MAAMmD,QAAhC,iBAEA,kBAACM,EAAA,EAAD,KAEI,uBAAGC,MAAO,CAAEC,MAAO,SAAWP,UAAU,eAAxC,cAGA,6BACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,kBAACQ,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,GAAKR,MAAO,CAACC,MAAO,YAAY,uBAAGD,MAAO,CAAEC,MAAO,UAAnB,KAArF,SACA,kBAACQ,EAAA,EAAD,CAAKH,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,IAChC,kBAACE,EAAA,EAAD,CAAOC,KAAK,OAAOrD,KAAK,OAAOsD,YAAY,sBAAsBC,UAAQ,MAGjF,kBAACX,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAaC,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,GAAKR,MAAO,CAACC,MAAO,YAAY,uBAAGD,MAAO,CAAEC,MAAO,UAAnB,KAA3F,aACA,kBAACQ,EAAA,EAAD,CAAKH,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,IAEhC,kBAACE,EAAA,EAAD,CAAOC,KAAK,OAAOrD,KAAK,aAAasC,GAAG,aAAagB,YAAY,yBAAyBC,UAAQ,SAMtH,kBAACC,EAAA,EAAD,KACI,yBAAKpB,UAAU,aACX,uBAAGM,MAAO,CAAEe,aAAc,QAC1B,4BAAQrB,UAAU,aAAasB,QAASrD,KAAKrB,MAAMmD,OAAQO,MAAO,CAAEiB,gBAAiB,OAAQhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAArO,WAGA,4BAAQ7B,UAAU,aAAaiB,KAAK,SAASX,MAAO,CAAEiB,gBAAiB,UAAWhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAA1N,mB,GA/GPC,a,SCNzBrF,IAAMC,YAEN,IA4LeqF,EA5LQ,SAACnF,GAIhBA,EAFAoF,gBAF2B,IAG3BhC,EACApD,EADAoD,UAH0B,EAMJiC,oBAAS,GANL,mBAMvB3C,EANuB,KAMhB4C,EANgB,OAOFD,oBAAS,GAPP,mBAOvBE,EAPuB,KAOfC,EAPe,OAQFH,oBAAS,GARP,mBAQvBI,EARuB,KAQfC,EARe,KAaxBvC,EAAS,kBAAMmC,GAAU5C,IACzBiD,EAAoB,kBAAMH,GAAWD,IACrCK,EAAe,kBAAMF,GAAWD,IAEtC,SAASI,EAAW3F,GAChBA,EAAEC,iBACFmF,GAAS,GACTE,GAAU,GACVE,GAAU,GA4Dd,OACI,6BAII,uBAAGtC,UAAU,OAAOsB,QAASvB,EAAQO,MAAO,CAAEC,MAAO,OAAQmC,WAAY,YAAarB,aAAc,KAApG,QAGA,uBAAGrB,UAAU,OAAOsB,QAASiB,EAAmBjC,MAAO,CAAEC,MAAO,OAAQmC,WAAY,cAApF,QAWA,kBAAC9C,EAAA,EAAD,CAAOE,OAAQR,EAAOS,OAAQA,EAAQC,UAAWA,GAC7C,kBAACI,EAAA,EAAD,CAAaL,OAAQA,GAArB,yBACA,kBAACM,EAAA,EAAD,KACA,0BAAMC,MAAO,CAAEqC,OAAQ,OAAQjB,YAAa,SAEpC,uBAAGpB,MAAO,CAAEsC,SAAU,OAAQvB,aAAc,OAAQd,MAAO,YAA3D,WACC3D,EAAMiG,qBACP,6BACA,uBAAGvC,MAAO,CAAEsC,SAAU,OAAQlB,YAAa,OAAQL,aAAc,MAAOd,MAAO,YAA/E,eACC3D,EAAMkG,yBAA2B,GAClC,6BACA,+BAKR,kBAAC1B,EAAA,EAAD,KACI,yBAAKpB,UAAU,aACX,4BAAQA,UAAU,aAAasB,QAASmB,EAAYnC,MAAO,CAAEiB,gBAAiB,UAAWhB,MAAO,OAAQkB,aAAc,GAAIC,YAAa,GAAIL,aAAc,GAAIM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAA7M,MAAoO,OAOhP,kBAACjC,EAAA,EAAD,CAAOE,OAAQqC,EAAQpC,OAAQwC,EAAmBvC,UAAWA,GACzD,kBAACC,EAAA,EAAD,CAAMC,GAAG,eAEL,kBAACE,EAAA,EAAD,uBAEA,kBAACC,EAAA,EAAD,KACI,uBAAGC,MAAO,CAAEC,MAAO,SAAWP,UAAU,eAAxC,cAGA,6BACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,kBAACQ,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,GAAKR,MAAO,CAACC,MAAO,YAAY,uBAAGD,MAAO,CAAEC,MAAO,UAAnB,KAArF,SACA,kBAACQ,EAAA,EAAD,CAAKH,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,IAChC,kBAACE,EAAA,EAAD,CAAOC,KAAK,OAAOrD,KAAK,OAAOmF,aAAcnG,EAAMiG,qBAAsB1B,UAAQ,MAGzF,kBAACX,EAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAaC,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,GAAKR,MAAO,CAACC,MAAO,YAAY,uBAAGD,MAAO,CAAEC,MAAO,UAAnB,KAA3F,aACA,kBAACQ,EAAA,EAAD,CAAKH,GAAG,KAAKC,GAAI,CAAEhB,KAAM,EAAGiB,OAAQ,IAEhC,kBAACE,EAAA,EAAD,CAAOC,KAAK,OAAOrD,KAAK,aAAasC,GAAG,aAAa6C,aAAcnG,EAAMkG,wBAAyB3B,UAAQ,SAM9H,kBAACC,EAAA,EAAD,KACI,yBAAKpB,UAAU,aAEX,uBAAGM,MAAO,CAACe,aAAc,QACrB,4BAAQrB,UAAU,aAAasB,QAASmB,EAAYnC,MAAO,CAAEiB,gBAAiB,OAAQhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAA9N,WAGJ,4BAAQ7B,UAAU,aAAasB,QAvIvD,SAAqBxE,GACjBA,EAAEC,iBAEF,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBAC9C4F,EAAS,OAAGhG,QAAH,IAAGA,OAAH,EAAGA,EAAaM,KAE3BC,EAASC,SAASC,cAAc,gBAC9BC,EAAW,IAAIC,SAASJ,GAE1BK,EAAOF,EAASG,IAAI,QACpBC,EAAaJ,EAASG,IAAI,eAEhB,IAAIE,gBAEVC,mBAAqB,WACD,IAApBC,KAAKC,WAAmC,MAAhBD,KAAKE,QAC7BC,MAAM,cAId,IAAM6E,EAAc,IAAItF,SAClBuF,EAAY,IAAIC,KACtBF,EAAY5E,OAAO,cAAe,aAAeT,EAAO,oBAAsBE,EAAa,MAG3FQ,IAAM8E,IAAI5E,EAAWA,yBAAkC6E,mBACjD,CACE,MAASzF,EACT,GAAMhB,EAAM0G,kBACZ,SAAYxF,EACZ,UAAakF,EACb,UAAaE,GAEjB,CACIxE,QAAS,CACLC,YAAa,mBACbC,cAAe5B,EAAY6B,SAEhCC,MAAK,SAAUC,GAGdtC,IAAM8G,QAAQ,8BAA+B,CACzCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAGf7E,YAAW,WACPC,OAAOC,SAASC,WACjB,SAmF8D8B,KAAK,SAASX,MAAO,CAAEiB,gBAAiB,UAAWhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAAhP,cAUhB,kBAACjC,EAAA,EAAD,CAAOE,OAAQuC,EAAQtC,OAAQyC,EAAcxC,UAAWA,GACpD,kBAACI,EAAA,EAAD,CAAaL,OAAQyC,GAArB,UACA,kBAACnC,EAAA,EAAD,MAGA,kBAACe,EAAA,EAAD,KACI,yBAAKpB,UAAU,aACX,4BAAQA,UAAU,aAAasB,QAASmB,EAAYnC,MAAO,CAAEiB,gBAAiB,OAAQhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAA9N,UAAyP,IAAK,IAAK,IAEnQ,4BAAQ7B,UAAU,aAAaiB,KAAK,SAASX,MAAO,CAAEiB,gBAAiB,UAAWhB,MAAO,OAAQiB,YAAa,QAASC,aAAc,GAAIC,YAAa,EAAGL,aAAc,EAAGM,WAAY,EAAGC,cAAe,EAAGC,cAAe,UAA1N,eCrLlBiC,E,YACF,WAAYlH,GAAQ,IAAD,8BACf,4CAAMA,KACDwC,MAAQ,CACTrD,MAAO,GACPuD,OAAO,EACPC,UAAU,EACVvC,YAAa,IAGjB,EAAK+C,OAAS,EAAKA,OAAON,KAAZ,gBACd,EAAKsE,kBAAoB,EAAKA,kBAAkBtE,KAAvB,gBACzB,EAAKuE,eAAiB,EAAKA,eAAevE,KAApB,gBAXP,E,iFAcE,IAAD,OAEZwE,EAAQhG,KACNjB,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,gBACpDa,KAAKyB,SAAS,CACV1C,YAAaA,IAEF,OAAGA,QAAH,IAAGA,KAAaM,KAE/BgB,IAAMT,IAAIW,EAAWA,yBAAkC0F,gBACnD,CACIxF,QAAS,CACLC,YAAa,mBACbC,cAAe5B,EAAY6B,SAGrCC,MAAK,SAAAC,GACH,IAAIoF,EAAuBpF,EAAIvD,KAAK4I,QAIhCC,EAFqBtF,EAAIvD,KAAK8I,UAAY,GAIxCC,EAAWF,EAAiBG,OAC9BH,EAAiBI,KAAI,SAAClG,EAAM2B,GAEN,IAAIiD,KAAK5E,EAAKmG,WAAhC,IACIC,EAAc,IAAIxB,KAAK5E,EAAKmG,WAEhC,MACI,CACIxE,GAAIA,EAAG,EACPxE,MAAO6C,EAAK7C,MACZkJ,SAAWrG,EAAKqG,SAChB1B,UAAWyB,EAAYE,WAAWC,UAAU,EAAG,IAC/CC,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,eAAgBhB,kBAAmB,EAAKhE,OAAQhE,MAAOwC,EAAMyG,YAAa,EAAKA,YAAahB,eAAgB,EAAKA,gBAAoB,EAAK5E,MAA1I,CAAiJkE,kBAAmB/E,EAAK2B,GAAI2C,qBAAsBtE,EAAK7C,MAAOoH,wBAAyBvE,EAAKqG,kBAMrQ,GAEJX,EAAMvE,SACF,CACIuF,YAAaV,EACbJ,qBAAuBA,S,+BAQnClG,KAAKyB,UAAS,SAAAC,GAAS,MAAK,CACxBL,OAAQK,EAAUL,Y,0CAItBrB,KAAKyB,UAAS,SAAAC,GAAS,MAAK,CACxBL,OAAQK,EAAUL,Y,qCAIXxC,GACX,IAAIoI,EAAQpI,EAAEqI,OAAOD,MACP,WAAVA,IACAA,EAAQjI,KAAKC,MAAMgI,IAEvBjH,KAAKyB,SAAS,CAAEH,SAAU2F,M,+BAa1B,MAJsC,KAAnCjH,KAAKmB,MAAM+E,uBACVlF,OAAOC,SAASkG,KAAO,SACvBjI,aAAakI,WAAW,gBAGxB,yBAAKrF,UAAU,YAAYM,MAAO,CAAEiB,gBAAiB,OAAQ+D,OAAQ,WAEjE,4BAAQtF,UAAU,uBAAuBsB,QAASrD,KAAK8B,OAAQO,MAAO,CAAEiB,gBAAiB,UAAWhB,MAAO,OAAQkB,aAAc,GAAIC,YAAa,GAAIL,aAAc,GAAIM,WAAY,EAAGC,cAAe,EAAG2D,MAAO,SAAWjI,KAAK,UAAS,uBAAGgD,MAAO,CAAEoC,WAAY,WAAxB,QAF7O,IAEkS,6BAC9R,kBAAC,EAAD,eAAY3C,OAAQ9B,KAAK8B,OAAQiF,YAAa/G,KAAK+G,YAAahB,eAAgB/F,KAAK+F,gBAAoB/F,KAAKmB,QAC9G,6BAEA,kBAAC,EAAD,iBAAuBnB,KAAKrB,MAA5B,CAAmCb,MAAOkC,KAAKmB,MAAM6F,oB,GA3G/CnD,aAkHPgC","file":"static/js/50.51f4888f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBContainer, MDBDataTable, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport $ from 'jquery';\r\n\r\n\r\nconst DataTablesChannel = ({ posts }) => {\r\n    \r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: '#',\r\n                field: 'id',\r\n                sort: 'disabled',\r\n                width: 10\r\n            }, \r\n            {\r\n                label: 'Name',\r\n                field: 'label',\r\n                sort: 'dsc',\r\n                width: 40\r\n            }, \r\n            {\r\n                label: 'Function',\r\n                field: 'function',\r\n                sort: 'asc',\r\n                width: 40\r\n            },\r\n            {\r\n                label: 'Updated On',\r\n                field: 'updatedOn',\r\n                sort: 'asc',\r\n                width: 40\r\n            },\r\n            // {\r\n            //     label: 'Status',\r\n            //     field: 'status',\r\n            //     sort: 'disabled',\r\n            //     width: 40\r\n            // },\r\n            {\r\n                label: 'Action',\r\n                field: 'action',\r\n                sort: 'disabled',\r\n                width: 50\r\n            }\r\n        ],\r\n                rows: posts\r\n    };\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBDataTable \r\n                small= {true} \r\n                theadColor = \"white\" \r\n                responsiveXl \r\n                btn={true}\r\n                striped \r\n                data={data } \r\n                sortable={ true } \r\n                bordered\r\n                noBottomColumns\r\n                responsiveSm             \r\n            />\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default DataTablesChannel;","// AddChannel\r\n\r\nimport React, { Component, useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Button, Input, Label, FormGroup, Form, Col, Spinner } from 'reactstrap';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { MDBIcon, MDBBtn } from 'mdbreact';\r\nimport ButtonGroup from 'reactstrap/lib/ButtonGroup';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport * as APP_CONFIG from '../../config/config';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { } from 'reactstrap';\r\n\r\ntoast.configure()\r\n\r\nclass AddChannel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            modal: false,\r\n            backdrop: true\r\n        };\r\n\r\n        this.openFormModal = this.openFormModal.bind(this);\r\n        // const [modal, setModal] = useState(false);\r\n        // this.changeBackdrop = this.changeBackdrop.bind(this);\r\n    }\r\n\r\n    openFormModal() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    addChannel = (e) => {\r\n        e.preventDefault();\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const createdBy = currentUser?.role;\r\n\r\n        let formID = document.querySelector(\"#channelData\");\r\n        const formData = new FormData(formID);\r\n\r\n        let name = formData.get('name');\r\n        let department = formData.get('department');\r\n\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.onreadystatechange = function () {\r\n            if (this.readyState === 4 & this.status === 200) {\r\n                alert('Uploaded!');\r\n            }\r\n        };\r\n\r\n        const channelForm = new FormData();\r\n        channelForm.append('channelForm', '{\"name\": \"' + name + '\",\"department\": \"' + department + '\"}');\r\n\r\n        let _that = this;\r\n\r\n\r\n       axios.post(APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].API_CREATE_CHANNEL\r\n        , {\r\n            \"label\": name,\r\n            \"function\": department,\r\n            \"createdBy\": createdBy\r\n        },\r\n        {\r\n            headers: {\r\n                ContentType: \"Application/json\",\r\n                Authorization: currentUser.token\r\n            }\r\n        }).then(function (res) {\r\n            //handle success\r\n            toast('Channel Created Successfully');\r\n            setTimeout(function () {\r\n                window.location.reload();\r\n            }, 1000)\r\n        })\r\n\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                {/* Modal to open Menu upload form */}\r\n                <Modal size=\"lg\" isOpen={this.props.modal} toggle={this.props.toggle} className={this.props.className} backdrop={this.backdrop} >\r\n                    {/* channel form */}\r\n\r\n                    <Form id=\"channelData\" onSubmit={this.addChannel}>\r\n                        {/* modal content for the head section */}\r\n                        <ModalHeader toggle={this.props.toggle} > Add Channel </ModalHeader>\r\n                        {/* modal content for the body section */}\r\n                        <ModalBody>\r\n\r\n                            <a style={{ color: 'black' }} className=\"float-right\">\r\n                                * Required\r\n                            </a>\r\n                            <br />\r\n                            <div className=\"container\">\r\n                                <div className=\"container\">\r\n                                    <FormGroup row>\r\n                                        <Label htmlFor=\"name\" sm=\"12\" md={{ size: 1, offset: 1 }} style={{color: '#E60000'}}><a style={{ color: 'black' }}>*</a>Name:</Label>\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 2 }}>\r\n                                            <Input type=\"text\" name=\"name\" placeholder=\"Please provide name\" required/>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label htmlFor=\"department\" sm=\"12\" md={{ size: 1, offset: 1 }} style={{color: '#E60000'}}><a style={{ color: 'black' }}>*</a>Function:</Label>\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 2 }} >\r\n                                            {/* <Input type=\"text\" name=\"menuCategory\" placeholder=\"Please provide menu category\" /> */}\r\n                                            <Input type=\"text\" name=\"department\" id=\"department\" placeholder=\"Please select function\" required></Input>\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <div className=\"btn-group\">\r\n                                <a style={{ paddingRight: '5px'}}>\r\n                                <button className=\"btn btn-lg\" onClick={this.props.toggle} style={{ backgroundColor: '#000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}>Cancel</button>\r\n                                </a>\r\n\r\n                                <button className=\"btn btn-lg\" type=\"submit\" style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }} >Submit</button>\r\n                            </div>\r\n                        </ModalFooter>\r\n                    </Form>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddChannel;","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, FormGroup, Form, Col } from 'reactstrap';\r\nimport { MDBIcon, MDBBtn, MDBBtnGroup } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport * as APP_CONFIG from '../../config/config';\r\nimport card from 'reactstrap'\r\n\r\n\r\ntoast.configure()\r\n\r\nconst ChannelActions = (props) => {\r\n    const {\r\n        buttonLabelView,\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [modal2, setModal2] = useState(false);\r\n    const [modal3, setModal3] = useState(false);\r\n\r\n\r\n\r\n    // Intialize modals\r\n    const toggle = () => setModal(!modal);\r\n    const toggleEditChannel = () => setModal2(!modal2);\r\n    const toggleDelete = () => setModal3(!modal3);\r\n\r\n    function closeModal(e) {\r\n        e.preventDefault();\r\n        setModal(false);\r\n        setModal2(false);\r\n        setModal3(false);\r\n     \r\n    }\r\n\r\n    function editChannel(e) {\r\n        e.preventDefault();\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        const updatedBy = currentUser?.role;\r\n\r\n        let formID = document.querySelector(\"#channelData\");\r\n        const formData = new FormData(formID);\r\n\r\n        let name = formData.get('name');\r\n        let department = formData.get('department');\r\n\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.onreadystatechange = function () {\r\n            if (this.readyState === 4 & this.status === 200) {\r\n                alert('Uploaded!');\r\n            }\r\n        };\r\n\r\n        const channelForm = new FormData();\r\n        const updatedOn = new Date();\r\n        channelForm.append('channelForm', '{\"name\": \"' + name + '\",\"department\": \"' + department + '\"}');\r\n        let _that = this;\r\n\r\n        axios.put(APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].API_UPDATE_CHANNEL\r\n            , {\r\n                \"label\": name,\r\n                \"id\": props.selectedChannelId,\r\n                \"function\": department,\r\n                \"updatedBy\": updatedBy,\r\n                \"createdOn\": updatedOn\r\n            },\r\n            {\r\n                headers: {\r\n                    ContentType: \"Application/json\",\r\n                    Authorization: currentUser.token\r\n                }\r\n            }).then(function (res) {\r\n                //handle success\r\n\r\n                toast.success('Channel Edited Successfully', {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true\r\n                    }\r\n                    );\r\n                setTimeout(function () {\r\n                    window.location.reload();\r\n                }, 1000)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Button in table for View */}\r\n            {/* <button className=\"btn btn-lg\" onClick={toggle} style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}>View</button> */}\r\n\r\n            <a className=\"link\" onClick={toggle} style={{ color: 'blue', fontFamily: \"san-serif\", paddingRight: 15 }}>\r\n                View\r\n            </a>\r\n            <a className=\"link\" onClick={toggleEditChannel} style={{ color: 'blue', fontFamily: \"san-serif\" }}>\r\n                Edit\r\n            </a>\r\n\r\n            {/* Edit Button */}\r\n            {/* <button className=\"btn btn-lg\" onClick={toggleEdit} style={{ backgroundColor: '#000', color: '#fff', borderColor: 'green', borderRadius: 5, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}> <MDBIcon icon='edit ' /> </button> */}\r\n\r\n            {/* Delete Button  */}\r\n            {/* <button className=\"btn btn-lg\" onClick={toggleDelete} style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 5, paddingLeft: 5, paddingRight: 7, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}> <MDBIcon icon='trash-alt' /></button> */}\r\n\r\n            {/* Create modal for View Channel Details */}\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}> Channel Information </ModalHeader>\r\n                <ModalBody>\r\n                <card style={{ border: \"10px\", paddingLeft: '70px' }}>\r\n                        {/* <div style={{ border: \"10px\", textAlign: \"center\"}}> */}\r\n                        <a style={{ fontSize: \"15px\", paddingRight: '20px', color: '#E60000' }}>Name:  </a>\r\n                        {props.selectedChannelLabel}\r\n                        <br />\r\n                        <a style={{ fontSize: \"15px\", paddingLeft: \"70px\", paddingRight: '4px', color: '#E60000' }}>Function:  </a>\r\n                        {props.selectedChannelFunction || \"\"} \r\n                        <br />\r\n                        <br />\r\n                        {/* </div> */}\r\n                </card>\r\n                \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-lg\" onClick={closeModal} style={{ backgroundColor: '#E60000', color: '#fff', borderRadius: 10, paddingLeft: 15, paddingRight: 15, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}>OK</button>{' '}\r\n                        {/* <button className=\"btn btn-lg\" type=\"submit\" style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 10, paddingRight: 20, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }} >Add</button> */}\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            {/* Create modal for Edit */}\r\n            <Modal isOpen={modal2} toggle={toggleEditChannel} className={className}>\r\n                <Form id=\"channelData\">\r\n                    {/* modal content for the head section */}\r\n                    <ModalHeader > Edit Channel </ModalHeader>\r\n                    {/* modal content for the body section */}\r\n                    <ModalBody>\r\n                        <a style={{ color: 'black' }} className=\"float-right\">\r\n                            * Required\r\n                            </a>\r\n                        <br />\r\n                        <div className=\"container\">\r\n                            <div className=\"container\">\r\n                                <FormGroup row>\r\n                                    <Label htmlFor=\"name\" sm=\"12\" md={{ size: 1, offset: 1 }} style={{color: '#E60000'}}><a style={{ color: 'black' }}>*</a>Name:</Label>\r\n                                    <Col sm=\"12\" md={{ size: 6, offset: 2 }}>\r\n                                        <Input type=\"text\" name=\"name\" defaultValue={props.selectedChannelLabel} required />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label htmlFor=\"department\" sm=\"12\" md={{ size: 1, offset: 1 }} style={{color: '#E60000'}}><a style={{ color: 'black' }}>*</a>Function:</Label>\r\n                                    <Col sm=\"12\" md={{ size: 6, offset: 2 }} >\r\n                                        {/* <Input type=\"text\" name=\"menuCategory\" placeholder=\"Please provide menu category\" /> */}\r\n                                        <Input type=\"text\" name=\"department\" id=\"department\" defaultValue={props.selectedChannelFunction} required></Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <div className=\"btn-group\">\r\n                            {/* <a style={{paddingRight: 10}}> */}\r\n                            <a style={{paddingRight: '5px'}}>\r\n                                <button className=\"btn btn-lg\" onClick={closeModal} style={{ backgroundColor: '#000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}>Cancel</button>\r\n                            </a>\r\n                            \r\n                            <button className=\"btn btn-lg\" onClick={editChannel} type=\"submit\" style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }} >Submit</button>\r\n\r\n                        </div>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n\r\n            {/* Create modal for delete */}\r\n\r\n            <Modal isOpen={modal3} toggle={toggleDelete} className={className}>\r\n                <ModalHeader toggle={toggleDelete}>Delete</ModalHeader>\r\n                <ModalBody>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-lg\" onClick={closeModal} style={{ backgroundColor: '#000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }}>Cancel</button>{\" \"}{\" \"}{\" \"}\r\n\r\n                        <button className=\"btn btn-lg\" type=\"submit\" style={{ backgroundColor: '#E60000', color: '#fff', borderColor: 'green', borderRadius: 10, paddingLeft: 5, paddingRight: 5, paddingTop: 0, paddingBottom: 0, textTransform: 'unset' }} >Submit</button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ChannelActions;","import React, { Component, Fragment } from 'react';\r\nimport DataTablesChannel from './DataTablesChannel';\r\nimport axios from 'axios';\r\nimport \"./channel.css\";\r\nimport AddChannel from './AddChannel';\r\nimport * as APP_CONFIG from '../../config/config';\r\nimport ChannelActions from './ChannelActions';\r\nimport { MDBIcon, MDBBtn, MDBBtnGroup } from 'mdbreact';\r\n\r\nclass Channel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            modal: false,\r\n            backdrop: true,\r\n            currentUser: \"\"\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleViewChannel = this.toggleViewChannel.bind(this);\r\n        this.changeBackdrop = this.changeBackdrop.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let _that = this;\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        this.setState({\r\n            currentUser: currentUser\r\n        });\r\n        const createdBy = currentUser?.role;\r\n\r\n        axios.get(APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].API_GET_CHANNEL,\r\n            {\r\n                headers: {\r\n                    ContentType: \"application/json\",\r\n                    Authorization: currentUser.token,\r\n                }\r\n            }\r\n        ).then(res => {\r\n            let currentUserErrorCode = res.data.errCode;\r\n\r\n            let postChannelResults = res.data.channels || [];\r\n\r\n            let postChannelItems = postChannelResults;\r\n            \r\n            const postList = postChannelItems.length ? (\r\n                postChannelItems.map((post, id ) => {\r\n                    \r\n                    let dateCreated = new Date(post.createdOn);\r\n                    let dateUpdated = new Date(post.createdOn);\r\n                    \r\n                    return (\r\n                        {\r\n                            id: id+1,\r\n                            label: post.label,\r\n                            function : post.function,\r\n                            updatedOn: dateUpdated.toString().substring(0, 28),\r\n                            action:\r\n                                <Fragment>\r\n                                    <MDBBtnGroup>\r\n                                        <ChannelActions toggleViewChannel={this.toggle} posts={post} constructor={this.constructor} changeBackdrop={this.changeBackdrop} {...this.state} selectedChannelId={post.id} selectedChannelLabel={post.label} selectedChannelFunction={post.function}/>\r\n                                    </MDBBtnGroup>\r\n                                </Fragment>\r\n                        }\r\n                    )\r\n                })\r\n            ) : []\r\n\r\n            _that.setState(\r\n                { \r\n                    ProductData: postList,\r\n                    currentUserErrorCode : currentUserErrorCode \r\n                }\r\n            )\r\n        });\r\n\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n    toggleViewChannel() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    changeBackdrop(e) {\r\n        let value = e.target.value;\r\n        if (value !== 'static') {\r\n            value = JSON.parse(value);\r\n        }\r\n        this.setState({ backdrop: value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // const btn1 = <button className=\"btn btn-lg\" style={{ backgroundColor: '#E60000', color: '#fff' }} role=\"button\">View</button>;\r\n\r\n        // Sign off user\r\n        if(this.state.currentUserErrorCode == \"2\"){\r\n            window.location.href = \"/login\";\r\n            localStorage.removeItem(\"currentUser\")\r\n        }\r\n        return (\r\n            <div className=\"container\" style={{ backgroundColor: \"#fff\", height: \"1200px\" }}>\r\n                {/* Add channel button */}\r\n                <button className=\"btn btn-lg icon-plus\" onClick={this.toggle} style={{ backgroundColor: '#E60000', color: '#fff', borderRadius: 10, paddingLeft: 10, paddingRight: 10, paddingTop: 5, paddingBottom: 5, float: 'right' }} role=\"button\"><a style={{ fontFamily: 'Roboto' }}>Add</a></button> <br />\r\n                <AddChannel toggle={this.toggle} constructor={this.constructor} changeBackdrop={this.changeBackdrop} {...this.state} />\r\n                <br />                \r\n                \r\n                <DataTablesChannel {...this.props} posts={this.state.ProductData} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Channel;"],"sourceRoot":""}