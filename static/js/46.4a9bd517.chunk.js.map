{"version":3,"sources":["assets/img/brand/LoginImg0.jpg","views/Pages/Login/Login.js"],"names":["module","exports","BgImage","require","Login","state","username","password","loggedIn","isloading","fields","errors","loading","className","login","e","preventDefault","setState","handleValidation","axios","post","APP_CONFIG","BASE_API_URL_AUTH","headers","ContentType","then","token","console","log","userToken","data","userErrorCode","status","userErrorMessage","statusText","currentUser","localStorage","setItem","JSON","stringify","window","location","href","catch","error","toast","this","formIsValid","field","target","value","$","document","ready","delay","fadeIn","props","user","customer","accountName","from","to","style","backgroundImage","backgroundColor","backgroundSize","height","backgroundRepeat","color","clear","display","justifyContent","id","padding","width","type","onChange","handleChange","bind","onInput","placeholder","autoComplete","required","float","xs","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","onClick","fontSize","Component"],"mappings":"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","file":"static/js/46.4a9bd517.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LoginImg0.94ce547e.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, CardBody, CardGroup, CardImg, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport * as APP_CONFIG from '../../../config/config';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport \"./login.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport swal from 'sweetalert2';\r\nimport $ from 'jquery';\r\n\r\nconst logo = require('../../../assets/img/brand/LoginImg0.jpg');\r\nconst BgImage = require('../../../assets/img/brand/LoginImg0.jpg');\r\n\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    loggedIn: false,\r\n    isloading: false,\r\n    fields: {},\r\n    errors: {}\r\n  }\r\n  \r\n  handleValidation() {\r\n    let fields = this.state.fields;\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Name\r\n    if (!fields[\"username\"]) {\r\n      formIsValid = false;\r\n      errors[\"username\"] = 'Please enter your username ';\r\n\r\n    }\r\n\r\n    if (!fields[\"password\"]) {\r\n      formIsValid = false;\r\n      errors[\"password\"] = \"You haven't added a password\";\r\n    }\r\n\r\n    this.setState({ errors: errors });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChange(field, e) {\r\n    let fields = this.state.fields;\r\n    fields[field] = e.target.value;\r\n    this.setState({ fields });\r\n  }\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\" >Loading...</div>  \r\n\r\n  render() {\r\n    \r\n    // this.loading();\r\n    // swal.fire({\r\n    //   timer: 2000,\r\n    //   background: '#ffffff00',\r\n    //   onBeforeOpen: () => {\r\n    //     swal.showLoading()\r\n    //   }\r\n    // })\r\n    \r\n    $(document).ready(function() {\r\n      $('#loginFormHideBeforeDisplay').delay(2000).fadeIn(2000);\r\n  });\r\n\r\n    const { isloading } = this.state;\r\n    if (this.props?.user?.customer && this.props?.user?.customer?.accountName) {\r\n      return <Redirect from=\"/\" to=\"/dashboard\" />\r\n    }\r\n    return (\r\n      <div  style={{\r\n        backgroundImage: \"url(\" + BgImage + \")\",\r\n        backgroundColor: '#fff',\r\n        backgroundSize: '100%',\r\n        height: '100%',\r\n        backgroundRepeat: 'no-repeat',\r\n\r\n      }}>\r\n        <div style={{ backgroundColor: '#4E4C45', color: '#fff', height: '50px'}}>fff</div>\r\n        <div className=\"app flex-row align-items-center \" style={{ clear: 'both'}}>\r\n          <Container className=\"container\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {/* <img src={logo} width=\"250\" style={{ float: 'center', paddingTop: '80px', paddingLeft: '0px' }} /> */}\r\n            <Row >\r\n              <Col>\r\n                <CardGroup id=\"loginFormHideBeforeDisplay\" style={{ display\r\n                      : 'none', padding: '0px', width: '400px', height: 'auto'}}>\r\n                  <Card className=\"p-4 lginbdr\" >\r\n                    <CardBody>\r\n                      <Form >\r\n                        <p className=\"text-muted\">Sign in to your account</p>\r\n\r\n                        \r\n                        <div className=\"loginerror\" >{this.state.errors.username}</div>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input type=\"text\" onChange={this.handleChange.bind(this, \"username\")} onInput={e => { this.setState({ username: e.target.value }) }} placeholder=\"Username\" autoComplete=\"username\" required />\r\n                        </InputGroup>\r\n                        \r\n                        <div className=\"loginerror\" >{this.state.errors.password}</div>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input type=\"password\" onChange={this.handleChange.bind(this, \"password\")} onInput={e => { this.setState({ password: e.target.value }) }} placeholder=\"Password\" autoComplete=\"current-password\" required />\r\n                        </InputGroup>                        \r\n                        <br />\r\n                        <Row style={{ float: \"right\" }}>\r\n                          <Col xs=\"12\">                            \r\n                            <button type=\"submit\" style={{ backgroundColor: 'blue', color: '#fff', borderRadius: 10, paddingLeft: 20, paddingRight: 20, paddingTop: 2, paddingBottom: 5 }} onClick={this.login}><a style={{ fontSize: '14px' }}>Sign in</a></button>\r\n                            <div className=\"loginerror\">{this.props?.user?.error}</div>\r\n                          </Col>\r\n\r\n                        </Row>\r\n                      </Form>\r\n                    </CardBody>\r\n                  </Card>\r\n                </CardGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n      \r\n        </div>\r\n        <div style={{ backgroundColor: '#4E4C45', color: '#fff', height: '25px', clear: 'both'}}>fff</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ isloading: true });\r\n\r\n    if (!this.handleValidation()) {\r\n      return\r\n    }\r\n  \r\n    // console.log(\"test logi\");\r\n    axios.post(APP_CONFIG[APP_CONFIG.REACT_APP_ENVIRONMENT].BASE_API_URL_AUTH,\r\n      { \r\n        \"username\": (this.state.username), \r\n        \"password\": this.state.password \r\n      },\r\n      {\r\n          headers: {\r\n\r\n              ContentType: \"application/json\",\r\n              'Access-Control-Allow-Origin': '*',\r\n          }\r\n      }).then(token => {\r\n\r\n      console.log(\"auth ===>\", token);\r\n      const userToken = token?.data;\r\n      const userErrorCode = token?.status;\r\n      const userErrorMessage = token?.statusText;\r\n\r\n      const currentUser = { \"token\": userToken, \"username\": this.state.username, \"errCode\": userErrorCode, \"errMsg\": userErrorMessage }\r\n\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(currentUser))\r\n      this.setState({ isloading: false }); \r\n      window.location.href = \"/dashboard\";\r\n\r\n    }).catch(error => {\r\n\r\n      toast.error(\"Wrong User Credentials\")\r\n      this.setState({ isloading: false });\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Login;"],"sourceRoot":""}